import pandas as pd
import plotly.express as px

# Datensatz
data = {
    'First published': [1859, 1943, 1997, 1939, 1791, 1937, 1950, 1887, 1992, 2003, 1998, 1999, 2000, 2003, 2005, 2007, 1988, 1951, 1992, 1880, 1984, 1967, 1955, 1880, 1946, 1908, 1877, 1980, 1975, 1972, 1976, 1952, 1955, 1902, 1970, 1969, 1899, 1960, 1979, 1980, 1991, 2000, 1979, 1932, 1869, 1881, 1947, 1976, 1977, 2002, 2003, 1966, 1939, 1936, 1925, 1936, 1938, 1949, 1951, 2005, 2009, 2008, 1961, 1945, 1998, 1988, 1788, 1934, 1908, 1989, 1935, 1993, 2012, 2015, 2007, 1936, 1969, 1970, 2009, 2010, 1988, 1957, 1946, 2012, 1929, 1974, 1958, 1945, 2004, 1971, 1974, 1986, 1977, 1984, 1885, 1982, 1813, 1950, 1923, 1963],
    
    'Approximate sales in millions': [200, 200, 120, 100, 100, 100, 85, 83, 80, 80, 77, 65, 65, 65, 65, 65, 65, 65, 60, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 45, 44, 43, 40, 40, 40, 40, 40, 39, 37, 36.4, 36, 35,35, 35, 33, 33, 31.05, 31, 30, 30, 30, 30, 30, 30, 30, 30, 30, 29, 28, 26, 29, 25, 25, 25, 25, 25, 24, 23, 23, 23, 22.5, 21, 21, 21, 21, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
    'Book': [
        "A Tale of Two Cities",
        "The Little Prince",
        "Harry Potter and the Philosopher's Stone",
        "And Then There Were None",
        "Dream of the Red Chamber",
        "The Hobbit",
        "The Lion, the Witch and the Wardrobe",
        "She: A History of Adventure",
        "Vardi Wala Gunda",
        "The Da Vinci Code",
        "Harry Potter and the Chamber of Secrets",
        "Harry Potter and the Prisoner of Azkaban",
        "Harry Potter and the Goblet of Fire",
        "Harry Potter and the Order of the Phoenix",
        "Harry Potter and the Half-Blood Prince",
        "Harry Potter and the Deathly Hallows",
        "The Alchemist",
        "The Catcher in the Rye",
        "The Bridges of Madison County",
        "Ben-Hur: A Tale of the Christ",
        "You Can Heal Your Life",
        "One Hundred Years of Solitude",
        "Lolita",
        "Heidi",
        "The Common Sense Book of Baby and Child Care",
        "Anne of Green Gables",
        "Black Beauty",
        "The Name of the Rose",
        "The Eagle Has Landed",
        "Watership Down",
        "The Hite Report",
        "Charlotte's Web",
        "The Ginger Man",
        "The Tale of Peter Rabbit",
        "Jonathan Livingston Seagull",
        "The Very Hungry Caterpillar",
        "A Message to Garcia",
        "To Kill a Mockingbird",
        "Flowers in the Attic",
        "Cosmos",
        "Sophie's World",
        "Angels & Demons",
        "Kane and Abel",
        "How the Steel Was Tempered",
        "War and Peace",
        "The Adventures of Pinocchio",
        "The Diary of Anne Frank",
        "Your Erroneous Zones",
        "The Thorn Birds",
        "The Purpose Driven Life",
        "The Kite Runner",
        "Valley of the Dolls",
        "Alcoholics Anonymous Big Book",
        "How to Win Friends and Influence People",
        "The Great Gatsby",
        "Gone with the Wind",
        "Rebecca",
        "Nineteen Eighty-Four",
        "The Revolt of Mamie Stover",
        "The Girl with the Dragon Tattoo",
        "The Lost Symbol",
        "The Hunger Games",
        "James and the Giant Peach",
        "The Young Guard",
        "Who Moved My Cheese?",
        "A Brief History of Time",
        "Paul et Virginie",
        "Lust for Life",
        "The Wind in the Willows",
        "The 7 Habits of Highly Effective People",
        "Virgin Soil Upturned",
        "The Celestine Prophecy",
        "The Fault in Our Stars",
        "The Girl on the Train",
        "The Shack",
        "Uncle Styopa",
        "The Godfather",
        "Love Story",
        "Catching Fire",
        "Mockingjay",
        "Kitchen",
        "Andromeda Nebula",
        "Autobiography of a Yogi",
        "Gone Girl",
        "All Quiet on the Western Front",
        "The Bermuda Triangle",
        "Things Fall Apart",
        "Animal Farm",
        "Wolf Totem",
        "The Happy Hooker: My Own Story",
        "Jaws",
        "Love You Forever",
        "The Women's Room",
        "What to Expect When You're Expecting",
        "Adventures of Huckleberry Finn",
        "The Secret Diary of Adrian Mole, Aged 13¾",
        "Pride and Prejudice",
        "Kon-Tiki: Across the Pacific in a Raft",
        "The Good Soldier Švejk",
        "Where the Wild Things Are"],

    'Original language': ["English", "French", "English", "English", "Chinese", "English", "English", "English", "Hindi", "English", "English", "English", "English", "English", "English", "English", "Portuguese", "English", "English", "English", "English", "Spanish", "English", "German", "English", "English", "English", "Italian", "English", "English", "English", "English", "English", "English", "English", "English", "English", "English", "English", "English", "Norwegian", "English", "English", "Russian", "Russian", "Italian", "Dutch", "English", "English", "English", "English", "English", "English", "English", "English", "English", "English", "English", "English", "Swedish", "English", "English", "English", "Russian", "English", "English", "French", "English", "English", "English", "Russian", "English", "English", "English", "English", "Russian", "English", "English", "English", "English", "Japanese", "Russian", "Hindi", "English", "German", "English", "English", "English", "Chinese", "English", "English", "English", "English", "English", "English", "English", "English", "Norwegian", "Czech", "English"] 
}

df = pd.DataFrame(data)

# Abfolge der verknüpften Datenpunkte nach Datum
df = df.sort_values(by='First published')

# Liniendiagramm erstellen
liniendiagramm = px.line(df, x='First published', y='Approximate sales in millions', color='Original language', hover_data=['Book'], markers=True)

# Liniendiagramm anzeigen
liniendiagramm.show() 
